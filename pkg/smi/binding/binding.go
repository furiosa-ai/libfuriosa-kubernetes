// WARNING: This file has automatically been generated on Mon, 10 Jun 2024 17:31:27 KST.
// Code generated by https://git.io/c-for-go. DO NOT EDIT.

package binding

/*
#include "furiosa/furiosa_smi.h"
#include <stdlib.h>
#include "cgo_helpers.h"
*/
import "C"
import (
	"runtime"
	"unsafe"
)

// FuriosaSmiInit function as declared in smi/furiosa_smi.h:147
func FuriosaSmiInit() FuriosaSmiReturnCode {
	__ret := C.furiosa_smi_init()
	__v := (FuriosaSmiReturnCode)(__ret)
	return __v
}

// FuriosaSmiShutdown function as declared in smi/furiosa_smi.h:149
func FuriosaSmiShutdown() FuriosaSmiReturnCode {
	__ret := C.furiosa_smi_shutdown()
	__v := (FuriosaSmiReturnCode)(__ret)
	return __v
}

// FuriosaSmiGetDeviceHandles function as declared in smi/furiosa_smi.h:151
func FuriosaSmiGetDeviceHandles(outHandles *FuriosaSmiDeviceHandles) FuriosaSmiReturnCode {
	coutHandles, coutHandlesAllocMap := (*C.FuriosaSmiDeviceHandles)(unsafe.Pointer(outHandles)), cgoAllocsUnknown
	__ret := C.furiosa_smi_get_device_handles(coutHandles)
	runtime.KeepAlive(coutHandlesAllocMap)
	__v := (FuriosaSmiReturnCode)(__ret)
	return __v
}

// FuriosaSmiGetDeviceHandleByUuid function as declared in smi/furiosa_smi.h:153
func FuriosaSmiGetDeviceHandleByUuid(uuid string, outHandle *FuriosaSmiDeviceHandle) FuriosaSmiReturnCode {
	cuuid, cuuidAllocMap := unpackPCharString(uuid)
	coutHandle, coutHandleAllocMap := (*C.FuriosaSmiDeviceHandle)(unsafe.Pointer(outHandle)), cgoAllocsUnknown
	__ret := C.furiosa_smi_get_device_handle_by_uuid(cuuid, coutHandle)
	runtime.KeepAlive(coutHandleAllocMap)
	runtime.KeepAlive(cuuidAllocMap)
	__v := (FuriosaSmiReturnCode)(__ret)
	return __v
}

// FuriosaSmiGetDeviceHandleBySerial function as declared in smi/furiosa_smi.h:156
func FuriosaSmiGetDeviceHandleBySerial(uuid string, outHandle *FuriosaSmiDeviceHandle) FuriosaSmiReturnCode {
	cuuid, cuuidAllocMap := unpackPCharString(uuid)
	coutHandle, coutHandleAllocMap := (*C.FuriosaSmiDeviceHandle)(unsafe.Pointer(outHandle)), cgoAllocsUnknown
	__ret := C.furiosa_smi_get_device_handle_by_serial(cuuid, coutHandle)
	runtime.KeepAlive(coutHandleAllocMap)
	runtime.KeepAlive(cuuidAllocMap)
	__v := (FuriosaSmiReturnCode)(__ret)
	return __v
}

// FuriosaSmiGetDeviceHandleByBdf function as declared in smi/furiosa_smi.h:159
func FuriosaSmiGetDeviceHandleByBdf(uuid string, outHandle *FuriosaSmiDeviceHandle) FuriosaSmiReturnCode {
	cuuid, cuuidAllocMap := unpackPCharString(uuid)
	coutHandle, coutHandleAllocMap := (*C.FuriosaSmiDeviceHandle)(unsafe.Pointer(outHandle)), cgoAllocsUnknown
	__ret := C.furiosa_smi_get_device_handle_by_bdf(cuuid, coutHandle)
	runtime.KeepAlive(coutHandleAllocMap)
	runtime.KeepAlive(cuuidAllocMap)
	__v := (FuriosaSmiReturnCode)(__ret)
	return __v
}

// FuriosaSmiGetDeviceInfo function as declared in smi/furiosa_smi.h:162
func FuriosaSmiGetDeviceInfo(handle FuriosaSmiDeviceHandle, outDeviceInfo *FuriosaSmiDeviceInfo) FuriosaSmiReturnCode {
	chandle, chandleAllocMap := (C.FuriosaSmiDeviceHandle)(handle), cgoAllocsUnknown
	coutDeviceInfo, coutDeviceInfoAllocMap := (*C.FuriosaSmiDeviceInfo)(unsafe.Pointer(outDeviceInfo)), cgoAllocsUnknown
	__ret := C.furiosa_smi_get_device_info(chandle, coutDeviceInfo)
	runtime.KeepAlive(coutDeviceInfoAllocMap)
	runtime.KeepAlive(chandleAllocMap)
	__v := (FuriosaSmiReturnCode)(__ret)
	return __v
}

// FuriosaSmiGetDeviceFiles function as declared in smi/furiosa_smi.h:165
func FuriosaSmiGetDeviceFiles(handle FuriosaSmiDeviceHandle, outDeviceFiles *FuriosaSmiDeviceFiles) FuriosaSmiReturnCode {
	chandle, chandleAllocMap := (C.FuriosaSmiDeviceHandle)(handle), cgoAllocsUnknown
	coutDeviceFiles, coutDeviceFilesAllocMap := (*C.FuriosaSmiDeviceFiles)(unsafe.Pointer(outDeviceFiles)), cgoAllocsUnknown
	__ret := C.furiosa_smi_get_device_files(chandle, coutDeviceFiles)
	runtime.KeepAlive(coutDeviceFilesAllocMap)
	runtime.KeepAlive(chandleAllocMap)
	__v := (FuriosaSmiReturnCode)(__ret)
	return __v
}

// FuriosaSmiGetDeviceCoreStatus function as declared in smi/furiosa_smi.h:168
func FuriosaSmiGetDeviceCoreStatus(handle FuriosaSmiDeviceHandle, outCoreStatus *FuriosaSmiCoreStatuses) FuriosaSmiReturnCode {
	chandle, chandleAllocMap := (C.FuriosaSmiDeviceHandle)(handle), cgoAllocsUnknown
	coutCoreStatus, coutCoreStatusAllocMap := (*C.FuriosaSmiCoreStatuses)(unsafe.Pointer(outCoreStatus)), cgoAllocsUnknown
	__ret := C.furiosa_smi_get_device_core_status(chandle, coutCoreStatus)
	runtime.KeepAlive(coutCoreStatusAllocMap)
	runtime.KeepAlive(chandleAllocMap)
	__v := (FuriosaSmiReturnCode)(__ret)
	return __v
}

// FuriosaSmiGetDeviceLiveness function as declared in smi/furiosa_smi.h:171
func FuriosaSmiGetDeviceLiveness(handle FuriosaSmiDeviceHandle, outLiveness *bool) FuriosaSmiReturnCode {
	chandle, chandleAllocMap := (C.FuriosaSmiDeviceHandle)(handle), cgoAllocsUnknown
	coutLiveness, coutLivenessAllocMap := (*C._Bool)(unsafe.Pointer(outLiveness)), cgoAllocsUnknown
	__ret := C.furiosa_smi_get_device_liveness(chandle, coutLiveness)
	runtime.KeepAlive(coutLivenessAllocMap)
	runtime.KeepAlive(chandleAllocMap)
	__v := (FuriosaSmiReturnCode)(__ret)
	return __v
}

// FuriosaSmiGetDeviceErrorInfo function as declared in smi/furiosa_smi.h:174
func FuriosaSmiGetDeviceErrorInfo(handle FuriosaSmiDeviceHandle, outErrorInfo *FuriosaSmiDeviceErrorInfo) FuriosaSmiReturnCode {
	chandle, chandleAllocMap := (C.FuriosaSmiDeviceHandle)(handle), cgoAllocsUnknown
	coutErrorInfo, coutErrorInfoAllocMap := (*C.FuriosaSmiDeviceErrorInfo)(unsafe.Pointer(outErrorInfo)), cgoAllocsUnknown
	__ret := C.furiosa_smi_get_device_error_info(chandle, coutErrorInfo)
	runtime.KeepAlive(coutErrorInfoAllocMap)
	runtime.KeepAlive(chandleAllocMap)
	__v := (FuriosaSmiReturnCode)(__ret)
	return __v
}

// FuriosaSmiGetDriverInfo function as declared in smi/furiosa_smi.h:177
func FuriosaSmiGetDriverInfo(outDriverInfo *FuriosaSmiDriverInfo) FuriosaSmiReturnCode {
	coutDriverInfo, coutDriverInfoAllocMap := (*C.FuriosaSmiDriverInfo)(unsafe.Pointer(outDriverInfo)), cgoAllocsUnknown
	__ret := C.furiosa_smi_get_driver_info(coutDriverInfo)
	runtime.KeepAlive(coutDriverInfoAllocMap)
	__v := (FuriosaSmiReturnCode)(__ret)
	return __v
}

// FuriosaSmiGetDeviceUtilization function as declared in smi/furiosa_smi.h:179
func FuriosaSmiGetDeviceUtilization(handle FuriosaSmiDeviceHandle, outUtilizationInfo *FuriosaSmiDeviceUtilization) FuriosaSmiReturnCode {
	chandle, chandleAllocMap := (C.FuriosaSmiDeviceHandle)(handle), cgoAllocsUnknown
	coutUtilizationInfo, coutUtilizationInfoAllocMap := (*C.FuriosaSmiDeviceUtilization)(unsafe.Pointer(outUtilizationInfo)), cgoAllocsUnknown
	__ret := C.furiosa_smi_get_device_utilization(chandle, coutUtilizationInfo)
	runtime.KeepAlive(coutUtilizationInfoAllocMap)
	runtime.KeepAlive(chandleAllocMap)
	__v := (FuriosaSmiReturnCode)(__ret)
	return __v
}

// FuriosaSmiGetDevicePowerConsumption function as declared in smi/furiosa_smi.h:182
func FuriosaSmiGetDevicePowerConsumption(handle FuriosaSmiDeviceHandle, outPowerConsumption *FuriosaSmiDevicePowerConsumption) FuriosaSmiReturnCode {
	chandle, chandleAllocMap := (C.FuriosaSmiDeviceHandle)(handle), cgoAllocsUnknown
	coutPowerConsumption, coutPowerConsumptionAllocMap := (*C.FuriosaSmiDevicePowerConsumption)(unsafe.Pointer(outPowerConsumption)), cgoAllocsUnknown
	__ret := C.furiosa_smi_get_device_power_consumption(chandle, coutPowerConsumption)
	runtime.KeepAlive(coutPowerConsumptionAllocMap)
	runtime.KeepAlive(chandleAllocMap)
	__v := (FuriosaSmiReturnCode)(__ret)
	return __v
}

// FuriosaSmiGetDeviceTemperature function as declared in smi/furiosa_smi.h:185
func FuriosaSmiGetDeviceTemperature(handle FuriosaSmiDeviceHandle, outTemperature *FuriosaSmiDeviceTemperature) FuriosaSmiReturnCode {
	chandle, chandleAllocMap := (C.FuriosaSmiDeviceHandle)(handle), cgoAllocsUnknown
	coutTemperature, coutTemperatureAllocMap := (*C.FuriosaSmiDeviceTemperature)(unsafe.Pointer(outTemperature)), cgoAllocsUnknown
	__ret := C.furiosa_smi_get_device_temperature(chandle, coutTemperature)
	runtime.KeepAlive(coutTemperatureAllocMap)
	runtime.KeepAlive(chandleAllocMap)
	__v := (FuriosaSmiReturnCode)(__ret)
	return __v
}

// FuriosaSmiGetDeviceToDeviceLinkType function as declared in smi/furiosa_smi.h:188
func FuriosaSmiGetDeviceToDeviceLinkType(handle1 FuriosaSmiDeviceHandle, handle2 FuriosaSmiDeviceHandle, outLinkType *FuriosaSmiDeviceToDeviceLinkType) FuriosaSmiReturnCode {
	chandle1, chandle1AllocMap := (C.FuriosaSmiDeviceHandle)(handle1), cgoAllocsUnknown
	chandle2, chandle2AllocMap := (C.FuriosaSmiDeviceHandle)(handle2), cgoAllocsUnknown
	coutLinkType, coutLinkTypeAllocMap := (*C.FuriosaSmiDeviceToDeviceLinkType)(unsafe.Pointer(outLinkType)), cgoAllocsUnknown
	__ret := C.furiosa_smi_get_device_to_device_link_type(chandle1, chandle2, coutLinkType)
	runtime.KeepAlive(coutLinkTypeAllocMap)
	runtime.KeepAlive(chandle2AllocMap)
	runtime.KeepAlive(chandle1AllocMap)
	__v := (FuriosaSmiReturnCode)(__ret)
	return __v
}
