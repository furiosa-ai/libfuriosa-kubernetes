// WARNING: This file has automatically been generated
// Code generated by https://git.io/c-for-go. DO NOT EDIT.

package binding

/*
#include "furiosa/furiosa_smi.h"
#include <stdlib.h>
#include "cgo_helpers.h"
*/
import "C"
import (
	"runtime"
	"unsafe"
)

func FuriosaSmiInit() FuriosaSmiReturnCode {
	__ret := C.furiosa_smi_init()
	__v := (FuriosaSmiReturnCode)(__ret)
	return __v
}

func FuriosaSmiGetDeviceHandles(outHandles *FuriosaSmiDeviceHandles) FuriosaSmiReturnCode {
	coutHandles, coutHandlesAllocMap := (*C.FuriosaSmiDeviceHandles)(unsafe.Pointer(outHandles)), cgoAllocsUnknown
	__ret := C.furiosa_smi_get_device_handles(coutHandles)
	runtime.KeepAlive(coutHandlesAllocMap)
	__v := (FuriosaSmiReturnCode)(__ret)
	return __v
}

func FuriosaSmiGetDeviceHandleByUuid(uuid string, outHandle *FuriosaSmiDeviceHandle) FuriosaSmiReturnCode {
	cuuid, cuuidAllocMap := unpackPCharString(uuid)
	coutHandle, coutHandleAllocMap := (*C.FuriosaSmiDeviceHandle)(unsafe.Pointer(outHandle)), cgoAllocsUnknown
	__ret := C.furiosa_smi_get_device_handle_by_uuid(cuuid, coutHandle)
	runtime.KeepAlive(coutHandleAllocMap)
	runtime.KeepAlive(cuuidAllocMap)
	__v := (FuriosaSmiReturnCode)(__ret)
	return __v
}

func FuriosaSmiGetDeviceHandleBySerial(serial string, outHandle *FuriosaSmiDeviceHandle) FuriosaSmiReturnCode {
	cserial, cserialAllocMap := unpackPCharString(serial)
	coutHandle, coutHandleAllocMap := (*C.FuriosaSmiDeviceHandle)(unsafe.Pointer(outHandle)), cgoAllocsUnknown
	__ret := C.furiosa_smi_get_device_handle_by_serial(cserial, coutHandle)
	runtime.KeepAlive(coutHandleAllocMap)
	runtime.KeepAlive(cserialAllocMap)
	__v := (FuriosaSmiReturnCode)(__ret)
	return __v
}

func FuriosaSmiGetDeviceHandleByBdf(bdf string, outHandle *FuriosaSmiDeviceHandle) FuriosaSmiReturnCode {
	cbdf, cbdfAllocMap := unpackPCharString(bdf)
	coutHandle, coutHandleAllocMap := (*C.FuriosaSmiDeviceHandle)(unsafe.Pointer(outHandle)), cgoAllocsUnknown
	__ret := C.furiosa_smi_get_device_handle_by_bdf(cbdf, coutHandle)
	runtime.KeepAlive(coutHandleAllocMap)
	runtime.KeepAlive(cbdfAllocMap)
	__v := (FuriosaSmiReturnCode)(__ret)
	return __v
}

func FuriosaSmiGetDeviceInfo(handle FuriosaSmiDeviceHandle, outDeviceInfo *FuriosaSmiDeviceInfo) FuriosaSmiReturnCode {
	chandle, chandleAllocMap := (C.FuriosaSmiDeviceHandle)(handle), cgoAllocsUnknown
	coutDeviceInfo, coutDeviceInfoAllocMap := (*C.FuriosaSmiDeviceInfo)(unsafe.Pointer(outDeviceInfo)), cgoAllocsUnknown
	__ret := C.furiosa_smi_get_device_info(chandle, coutDeviceInfo)
	runtime.KeepAlive(coutDeviceInfoAllocMap)
	runtime.KeepAlive(chandleAllocMap)
	__v := (FuriosaSmiReturnCode)(__ret)
	return __v
}

func FuriosaSmiGetDeviceFiles(handle FuriosaSmiDeviceHandle, outDeviceFiles *FuriosaSmiDeviceFiles) FuriosaSmiReturnCode {
	chandle, chandleAllocMap := (C.FuriosaSmiDeviceHandle)(handle), cgoAllocsUnknown
	coutDeviceFiles, coutDeviceFilesAllocMap := (*C.FuriosaSmiDeviceFiles)(unsafe.Pointer(outDeviceFiles)), cgoAllocsUnknown
	__ret := C.furiosa_smi_get_device_files(chandle, coutDeviceFiles)
	runtime.KeepAlive(coutDeviceFilesAllocMap)
	runtime.KeepAlive(chandleAllocMap)
	__v := (FuriosaSmiReturnCode)(__ret)
	return __v
}

func FuriosaSmiGetDeviceCoreStatus(handle FuriosaSmiDeviceHandle, outCoreStatus *FuriosaSmiCoreStatuses) FuriosaSmiReturnCode {
	chandle, chandleAllocMap := (C.FuriosaSmiDeviceHandle)(handle), cgoAllocsUnknown
	coutCoreStatus, coutCoreStatusAllocMap := (*C.FuriosaSmiCoreStatuses)(unsafe.Pointer(outCoreStatus)), cgoAllocsUnknown
	__ret := C.furiosa_smi_get_device_core_status(chandle, coutCoreStatus)
	runtime.KeepAlive(coutCoreStatusAllocMap)
	runtime.KeepAlive(chandleAllocMap)
	__v := (FuriosaSmiReturnCode)(__ret)
	return __v
}

func FuriosaSmiGetDeviceLiveness(handle FuriosaSmiDeviceHandle, outLiveness *bool) FuriosaSmiReturnCode {
	chandle, chandleAllocMap := (C.FuriosaSmiDeviceHandle)(handle), cgoAllocsUnknown
	coutLiveness, coutLivenessAllocMap := (*C._Bool)(unsafe.Pointer(outLiveness)), cgoAllocsUnknown
	__ret := C.furiosa_smi_get_device_liveness(chandle, coutLiveness)
	runtime.KeepAlive(coutLivenessAllocMap)
	runtime.KeepAlive(chandleAllocMap)
	__v := (FuriosaSmiReturnCode)(__ret)
	return __v
}

func FuriosaSmiGetDeviceToDeviceLinkType(handle1 FuriosaSmiDeviceHandle, handle2 FuriosaSmiDeviceHandle, outLinkType *FuriosaSmiDeviceToDeviceLinkType) FuriosaSmiReturnCode {
	chandle1, chandle1AllocMap := (C.FuriosaSmiDeviceHandle)(handle1), cgoAllocsUnknown
	chandle2, chandle2AllocMap := (C.FuriosaSmiDeviceHandle)(handle2), cgoAllocsUnknown
	coutLinkType, coutLinkTypeAllocMap := (*C.FuriosaSmiDeviceToDeviceLinkType)(unsafe.Pointer(outLinkType)), cgoAllocsUnknown
	__ret := C.furiosa_smi_get_device_to_device_link_type(chandle1, chandle2, coutLinkType)
	runtime.KeepAlive(coutLinkTypeAllocMap)
	runtime.KeepAlive(chandle2AllocMap)
	runtime.KeepAlive(chandle1AllocMap)
	__v := (FuriosaSmiReturnCode)(__ret)
	return __v
}

func FuriosaSmiGetP2pAccessible(handle1 FuriosaSmiDeviceHandle, handle2 FuriosaSmiDeviceHandle, outAccessible *bool) FuriosaSmiReturnCode {
	chandle1, chandle1AllocMap := (C.FuriosaSmiDeviceHandle)(handle1), cgoAllocsUnknown
	chandle2, chandle2AllocMap := (C.FuriosaSmiDeviceHandle)(handle2), cgoAllocsUnknown
	coutAccessible, coutAccessibleAllocMap := (*C._Bool)(unsafe.Pointer(outAccessible)), cgoAllocsUnknown
	__ret := C.furiosa_smi_get_p2p_accessible(chandle1, chandle2, coutAccessible)
	runtime.KeepAlive(coutAccessibleAllocMap)
	runtime.KeepAlive(chandle2AllocMap)
	runtime.KeepAlive(chandle1AllocMap)
	__v := (FuriosaSmiReturnCode)(__ret)
	return __v
}

func FuriosaSmiGetDriverInfo(outDriverInfo *FuriosaSmiVersion) FuriosaSmiReturnCode {
	coutDriverInfo, coutDriverInfoAllocMap := (*C.FuriosaSmiVersion)(unsafe.Pointer(outDriverInfo)), cgoAllocsUnknown
	__ret := C.furiosa_smi_get_driver_info(coutDriverInfo)
	runtime.KeepAlive(coutDriverInfoAllocMap)
	__v := (FuriosaSmiReturnCode)(__ret)
	return __v
}

func FuriosaSmiGetCoreFrequency(handle FuriosaSmiDeviceHandle, outCoreFrequencyInfo *FuriosaSmiCoreFrequency) FuriosaSmiReturnCode {
	chandle, chandleAllocMap := (C.FuriosaSmiDeviceHandle)(handle), cgoAllocsUnknown
	coutCoreFrequencyInfo, coutCoreFrequencyInfoAllocMap := (*C.FuriosaSmiCoreFrequency)(unsafe.Pointer(outCoreFrequencyInfo)), cgoAllocsUnknown
	__ret := C.furiosa_smi_get_core_frequency(chandle, coutCoreFrequencyInfo)
	runtime.KeepAlive(coutCoreFrequencyInfoAllocMap)
	runtime.KeepAlive(chandleAllocMap)
	__v := (FuriosaSmiReturnCode)(__ret)
	return __v
}

func FuriosaSmiGetMemoryFrequency(handle FuriosaSmiDeviceHandle, outMemoryFrequencyInfo *FuriosaSmiMemoryFrequency) FuriosaSmiReturnCode {
	chandle, chandleAllocMap := (C.FuriosaSmiDeviceHandle)(handle), cgoAllocsUnknown
	coutMemoryFrequencyInfo, coutMemoryFrequencyInfoAllocMap := (*C.FuriosaSmiMemoryFrequency)(unsafe.Pointer(outMemoryFrequencyInfo)), cgoAllocsUnknown
	__ret := C.furiosa_smi_get_memory_frequency(chandle, coutMemoryFrequencyInfo)
	runtime.KeepAlive(coutMemoryFrequencyInfoAllocMap)
	runtime.KeepAlive(chandleAllocMap)
	__v := (FuriosaSmiReturnCode)(__ret)
	return __v
}

func FuriosaSmiGetDevicePerformanceCounter(handle FuriosaSmiDeviceHandle, outPerformanceCounterInfo *FuriosaSmiDevicePerformanceCounter) FuriosaSmiReturnCode {
	chandle, chandleAllocMap := (C.FuriosaSmiDeviceHandle)(handle), cgoAllocsUnknown
	coutPerformanceCounterInfo, coutPerformanceCounterInfoAllocMap := (*C.FuriosaSmiDevicePerformanceCounter)(unsafe.Pointer(outPerformanceCounterInfo)), cgoAllocsUnknown
	__ret := C.furiosa_smi_get_device_performance_counter(chandle, coutPerformanceCounterInfo)
	runtime.KeepAlive(coutPerformanceCounterInfoAllocMap)
	runtime.KeepAlive(chandleAllocMap)
	__v := (FuriosaSmiReturnCode)(__ret)
	return __v
}

func FuriosaSmiGetDevicePowerConsumption(handle FuriosaSmiDeviceHandle, outPowerConsumption *FuriosaSmiDevicePowerConsumption) FuriosaSmiReturnCode {
	chandle, chandleAllocMap := (C.FuriosaSmiDeviceHandle)(handle), cgoAllocsUnknown
	coutPowerConsumption, coutPowerConsumptionAllocMap := (*C.FuriosaSmiDevicePowerConsumption)(unsafe.Pointer(outPowerConsumption)), cgoAllocsUnknown
	__ret := C.furiosa_smi_get_device_power_consumption(chandle, coutPowerConsumption)
	runtime.KeepAlive(coutPowerConsumptionAllocMap)
	runtime.KeepAlive(chandleAllocMap)
	__v := (FuriosaSmiReturnCode)(__ret)
	return __v
}

func FuriosaSmiGetDeviceTemperature(handle FuriosaSmiDeviceHandle, outTemperature *FuriosaSmiDeviceTemperature) FuriosaSmiReturnCode {
	chandle, chandleAllocMap := (C.FuriosaSmiDeviceHandle)(handle), cgoAllocsUnknown
	coutTemperature, coutTemperatureAllocMap := (*C.FuriosaSmiDeviceTemperature)(unsafe.Pointer(outTemperature)), cgoAllocsUnknown
	__ret := C.furiosa_smi_get_device_temperature(chandle, coutTemperature)
	runtime.KeepAlive(coutTemperatureAllocMap)
	runtime.KeepAlive(chandleAllocMap)
	__v := (FuriosaSmiReturnCode)(__ret)
	return __v
}

func FuriosaSmiGetGovernorProfile(handle FuriosaSmiDeviceHandle, outGovernorProfile *FuriosaSmiGovernorProfile) FuriosaSmiReturnCode {
	chandle, chandleAllocMap := (C.FuriosaSmiDeviceHandle)(handle), cgoAllocsUnknown
	coutGovernorProfile, coutGovernorProfileAllocMap := (*C.FuriosaSmiGovernorProfile)(unsafe.Pointer(outGovernorProfile)), cgoAllocsUnknown
	__ret := C.furiosa_smi_get_governor_profile(chandle, coutGovernorProfile)
	runtime.KeepAlive(coutGovernorProfileAllocMap)
	runtime.KeepAlive(chandleAllocMap)
	__v := (FuriosaSmiReturnCode)(__ret)
	return __v
}

func FuriosaSmiSetGovernorProfile(handle FuriosaSmiDeviceHandle, governorProfile FuriosaSmiGovernorProfile) FuriosaSmiReturnCode {
	chandle, chandleAllocMap := (C.FuriosaSmiDeviceHandle)(handle), cgoAllocsUnknown
	cgovernorProfile, cgovernorProfileAllocMap := (C.FuriosaSmiGovernorProfile)(governorProfile), cgoAllocsUnknown
	__ret := C.furiosa_smi_set_governor_profile(chandle, cgovernorProfile)
	runtime.KeepAlive(cgovernorProfileAllocMap)
	runtime.KeepAlive(chandleAllocMap)
	__v := (FuriosaSmiReturnCode)(__ret)
	return __v
}

func FuriosaSmiEnableDevice(handle FuriosaSmiDeviceHandle) FuriosaSmiReturnCode {
	chandle, chandleAllocMap := (C.FuriosaSmiDeviceHandle)(handle), cgoAllocsUnknown
	__ret := C.furiosa_smi_enable_device(chandle)
	runtime.KeepAlive(chandleAllocMap)
	__v := (FuriosaSmiReturnCode)(__ret)
	return __v
}

func FuriosaSmiDisableDevice(handle FuriosaSmiDeviceHandle) FuriosaSmiReturnCode {
	chandle, chandleAllocMap := (C.FuriosaSmiDeviceHandle)(handle), cgoAllocsUnknown
	__ret := C.furiosa_smi_disable_device(chandle)
	runtime.KeepAlive(chandleAllocMap)
	__v := (FuriosaSmiReturnCode)(__ret)
	return __v
}

func FuriosaSmiGetDisabledDevices(outDisabledDevices *FuriosaSmiDisabledDevices) FuriosaSmiReturnCode {
	coutDisabledDevices, coutDisabledDevicesAllocMap := (*C.FuriosaSmiDisabledDevices)(unsafe.Pointer(outDisabledDevices)), cgoAllocsUnknown
	__ret := C.furiosa_smi_get_disabled_devices(coutDisabledDevices)
	runtime.KeepAlive(coutDisabledDevicesAllocMap)
	__v := (FuriosaSmiReturnCode)(__ret)
	return __v
}

func FuriosaSmiGetPcieDeviceInfo(handle FuriosaSmiDeviceHandle, outPcieDeviceInfo *FuriosaSmiPcieDeviceInfo) FuriosaSmiReturnCode {
	chandle, chandleAllocMap := (C.FuriosaSmiDeviceHandle)(handle), cgoAllocsUnknown
	coutPcieDeviceInfo, coutPcieDeviceInfoAllocMap := (*C.FuriosaSmiPcieDeviceInfo)(unsafe.Pointer(outPcieDeviceInfo)), cgoAllocsUnknown
	__ret := C.furiosa_smi_get_pcie_device_info(chandle, coutPcieDeviceInfo)
	runtime.KeepAlive(coutPcieDeviceInfoAllocMap)
	runtime.KeepAlive(chandleAllocMap)
	__v := (FuriosaSmiReturnCode)(__ret)
	return __v
}

func FuriosaSmiGetPcieLinkInfo(handle FuriosaSmiDeviceHandle, outPcieLinkInfo *FuriosaSmiPcieLinkInfo) FuriosaSmiReturnCode {
	chandle, chandleAllocMap := (C.FuriosaSmiDeviceHandle)(handle), cgoAllocsUnknown
	coutPcieLinkInfo, coutPcieLinkInfoAllocMap := (*C.FuriosaSmiPcieLinkInfo)(unsafe.Pointer(outPcieLinkInfo)), cgoAllocsUnknown
	__ret := C.furiosa_smi_get_pcie_link_info(chandle, coutPcieLinkInfo)
	runtime.KeepAlive(coutPcieLinkInfoAllocMap)
	runtime.KeepAlive(chandleAllocMap)
	__v := (FuriosaSmiReturnCode)(__ret)
	return __v
}

func FuriosaSmiGetSriovInfo(handle FuriosaSmiDeviceHandle, outSriovInfo *FuriosaSmiSriovInfo) FuriosaSmiReturnCode {
	chandle, chandleAllocMap := (C.FuriosaSmiDeviceHandle)(handle), cgoAllocsUnknown
	coutSriovInfo, coutSriovInfoAllocMap := (*C.FuriosaSmiSriovInfo)(unsafe.Pointer(outSriovInfo)), cgoAllocsUnknown
	__ret := C.furiosa_smi_get_sriov_info(chandle, coutSriovInfo)
	runtime.KeepAlive(coutSriovInfoAllocMap)
	runtime.KeepAlive(chandleAllocMap)
	__v := (FuriosaSmiReturnCode)(__ret)
	return __v
}

func FuriosaSmiGetPcieRootComplexInfo(handle FuriosaSmiDeviceHandle, outRootComplexInfo *FuriosaSmiPcieRootComplexInfo) FuriosaSmiReturnCode {
	chandle, chandleAllocMap := (C.FuriosaSmiDeviceHandle)(handle), cgoAllocsUnknown
	coutRootComplexInfo, coutRootComplexInfoAllocMap := (*C.FuriosaSmiPcieRootComplexInfo)(unsafe.Pointer(outRootComplexInfo)), cgoAllocsUnknown
	__ret := C.furiosa_smi_get_pcie_root_complex_info(chandle, coutRootComplexInfo)
	runtime.KeepAlive(coutRootComplexInfoAllocMap)
	runtime.KeepAlive(chandleAllocMap)
	__v := (FuriosaSmiReturnCode)(__ret)
	return __v
}

func FuriosaSmiGetPcieSwitchInfo(handle FuriosaSmiDeviceHandle, outPcieSwitchInfo *FuriosaSmiPcieSwitchInfo) FuriosaSmiReturnCode {
	chandle, chandleAllocMap := (C.FuriosaSmiDeviceHandle)(handle), cgoAllocsUnknown
	coutPcieSwitchInfo, coutPcieSwitchInfoAllocMap := (*C.FuriosaSmiPcieSwitchInfo)(unsafe.Pointer(outPcieSwitchInfo)), cgoAllocsUnknown
	__ret := C.furiosa_smi_get_pcie_switch_info(chandle, coutPcieSwitchInfo)
	runtime.KeepAlive(coutPcieSwitchInfoAllocMap)
	runtime.KeepAlive(chandleAllocMap)
	__v := (FuriosaSmiReturnCode)(__ret)
	return __v
}
